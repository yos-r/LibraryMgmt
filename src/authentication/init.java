/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package authentication;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author yosr barghouthi / maissa dridi l2cs02 
 */
public class init extends javax.swing.JFrame {
   public  String portnumber;
   public  String username;
   public  String password;
   public  String database;
    /**
     * Creates new form init
     */
    public init() {
        initComponents();
       
    }
    
    static Connection con = null; //connection config for each class connecting with the database
    public static Connection getConnection(String port,String user, String pwd)
    {
        try
        {
            
            Class.forName("com.mysql.cj.jdbc.Driver"); //Driver class
            String url = "jdbc:mysql://localhost:"+port+"/"; //jdbc: API, mysql is the database, localhost: server, 3306 port
            con = DriverManager.getConnection(url,user,pwd);
            System.out.println("Connected");
            
            
            
        }catch(ClassNotFoundException | SQLException e)
        {
            e.printStackTrace();
        }
        
        return con;
    }
    public static Connection getDBConnection(String port,String user, String pwd, String db  )
    {
        try
        {
            
            Class.forName("com.mysql.cj.jdbc.Driver"); //Driver class
            String url = "jdbc:mysql://localhost:"+port+"/"+db; //jdbc: API, mysql is the database, localhost: server, 3306 port
            con = DriverManager.getConnection(url,user,pwd);
            System.out.println("Connected to database "+db);
            
        }catch(ClassNotFoundException | SQLException e)
        {
            e.printStackTrace();
        }
        
        return con;
    }
    
   
     public String getUser(){
     return this.us.getText();}
     public String getPassword(){
     return this.pwd.getText();}
     public String getPortnumber(){
     return this.pn.getText();}
     public String getDatabase(){
     return this.db.getText();}
     public static String ch ;
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        us = new javax.swing.JTextField();
        pwd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pn = new javax.swing.JTextField();
        db = new javax.swing.JTextField();
        testconnection = new javax.swing.JButton();
        resultat = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton2 = new javax.swing.JButton();
        state1 = new javax.swing.JLabel();
        state2 = new javax.swing.JLabel();
        state3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Initialisation de la base de données");

        jLabel2.setText("username");

        jLabel3.setText("password");

        us.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usActionPerformed(evt);
            }
        });

        jLabel4.setText("database");

        jLabel5.setText("port number");

        testconnection.setText("tester la connexion");
        testconnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testconnectionActionPerformed(evt);
            }
        });

        resultat.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        jToggleButton1.setText("initialiser la base de données");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("passer au login");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Projet Gestion d'une libraire - Yosr Barghouthi - Maissa Dridi L2CS02");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(us)
                            .addComponent(pwd)
                            .addComponent(pn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(db, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 189, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(testconnection)
                                    .addGap(40, 40, 40)
                                    .addComponent(resultat, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jToggleButton1)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(state1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(state2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(state3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(us, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(pn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(db, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testconnection)
                    .addComponent(resultat))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToggleButton1)
                    .addComponent(state1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(state2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(state3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void testconnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testconnectionActionPerformed
        try{
            initdb.obj.setUsername(this.us.getText());
            initdb.obj.setPassword(this.pwd.getText());
            initdb.obj.setPortnumber(this.pn.getText());
            initdb.obj.setDatabase(this.db.getText());
        Connection conn= init.getConnection(this.getPortnumber(), this.getUser(), this.getPassword());
        if (!conn.isClosed()){
        System.out.println("Connection established");
        resultat.setText("Connexion établie!");}
        else {System.out.println("No connection established");
        resultat.setText("Connexion échouée!");}
        
        }
        catch(SQLException e){e.printStackTrace();}
        
        // TODO add your handling code here:
    }//GEN-LAST:event_testconnectionActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        try{
            Connection conn= init.getConnection(this.getPortnumber(),this.getUser(), this.getPassword());
            Statement stmt = conn.createStatement();
            String sql= "CREATE DATABASE " + this.getDatabase();
            stmt.executeUpdate(sql);
            System.out.println("Database created successfully..."); 
            conn.close();
        }
        catch (SQLException e) {
         e.printStackTrace();
      }
        try{
            Connection conn= init.getDBConnection(this.getPortnumber(),this.getUser(), this.getPassword(),this.getDatabase());
            Statement stmt = conn.createStatement();
            String sql = "CREATE TABLE users " +
                   "(cin varchar(8) not NULL, " +
                   " nom VARCHAR(10), " + 
                    "prenom varchar(10), " +
                   " email VARCHAR(50), " + 
                    "statut VARCHAR(10),"+
                   " password VARCHAR(20), " + 
                   " PRIMARY KEY (cin));"; 
            stmt.executeUpdate(sql);
            System.out.println("table users created successfully..."); 
            state1.setText("table users crée");
            conn.close();
        }
        catch (SQLException e) {
         e.printStackTrace();
      }
        try{
            Connection conn= init.getDBConnection(this.getPortnumber(),this.getUser(), this.getPassword(),this.getDatabase());
            Statement stmt = conn.createStatement();
            String sql = "CREATE TABLE livres " +
                   "(isbn varchar(10) not NULL, " +
                   " titre VARCHAR(50), " + 
                   " auteur VARCHAR(50), " + 
                   " dispo INT default 1, " + 
                   " PRIMARY KEY ( isbn ));"; 
            stmt.executeUpdate(sql);
            System.out.println("table livres created successfully..."); 
            state2.setText("table livres créee");
            conn.close();
        }
        catch (SQLException e) {
         e.printStackTrace();
      }
        try{
            Connection conn= init.getDBConnection(this.getPortnumber(),this.getUser(), this.getPassword(),this.getDatabase());
            Statement stmt = conn.createStatement();
            String sql = "CREATE TABLE emprunts " +
                   "(cin varchar(10) not NULL, " +
                    "isbn varchar(10) not NULL, " +
                   " dateemprunt date, " + 
                   " dateretour date, " + 
                   " retour INT default 0, " + 
                   " foreign key(cin) references users(cin),"+
                    "foreign key(isbn) references livres(isbn));"; 
            stmt.executeUpdate(sql);
            System.out.println("table emprunts created successfully..."); 
            state3.setText("table  emprunts créee");
            conn.close();
        }
        catch (SQLException e) {
         e.printStackTrace();
      }
        try{
            Connection conn= init.getDBConnection(this.getPortnumber(),this.getUser(), this.getPassword(),this.getDatabase());
            Statement stmt = conn.createStatement();
            String sql = "insert into users values('12345678','admin','admin','admin@mail','Admin','admin')"; 
            stmt.executeUpdate(sql);
            System.out.println("admin row added successfully..."); 
            conn.close();
        }
        catch (SQLException e) {
         e.printStackTrace();
        }
        try{
            Connection conn= init.getDBConnection(this.getPortnumber(),this.getUser(), this.getPassword(),this.getDatabase());
            Statement stmt = conn.createStatement();
            String sql1 = "insert into livres values('12345678','Voyage au bout de la nuit','Céline',1)"; 
            String sql2 = "insert into livres values('87654321','Mort à crédit','Céline',1)"; 
            String sql3 = "insert into livres values('123456','Orientalism','Edward Said',1)"; 
            stmt.executeUpdate(sql1);
            stmt.executeUpdate(sql2);
            stmt.executeUpdate(sql3);
            System.out.println("livres added successfully..."); 
            conn.close();
        }
        catch (SQLException e) {
         e.printStackTrace();
        }
        try{
            Connection conn= init.getDBConnection(this.getPortnumber(),this.getUser(), this.getPassword(),this.getDatabase());
            Statement stmt = conn.createStatement();
            String sql = "insert into users values('87654321','etudiant','etudiant','etudiant@mail','Etudiant','etudiant')"; 
            stmt.executeUpdate(sql);
            System.out.println("etudiant row added successfully..."); 
            conn.close();
        }
        catch (SQLException e) {
         e.printStackTrace();
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void usActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       this.setVisible(false);
        Loggingin login = null;
        try {
            login = new Loggingin(); //create instance of login page
        } catch (java.sql.SQLException ex) {
            Logger.getLogger(init.class.getName()).log(Level.SEVERE, null, ex);
        }
        login.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(init.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(init.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(init.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(init.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new init().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField db;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField pn;
    private javax.swing.JTextField pwd;
    private javax.swing.JLabel resultat;
    private javax.swing.JLabel state1;
    private javax.swing.JLabel state2;
    private javax.swing.JLabel state3;
    private javax.swing.JButton testconnection;
    private javax.swing.JTextField us;
    // End of variables declaration//GEN-END:variables
}
